package solution;

import annotations.Problem;
import enums.QDifficulty;
import enums.QTag;

import java.util.HashSet;
import java.util.Set;

@Problem(
        title = "Bitwise ORs of Subarrays",
        difficulty = QDifficulty.MEDIUM,
        tag = QTag.BIT_MANIPULATION,
        url = "https://leetcode.com/problems/bitwise-ors-of-subarrays/"
)
public class Q898 {
    /**
     * How many unique results can be generated by arr[i - 1]?
     * It's limited to 10^9 which less than 2^30. Maximum 30 unique values can be generated.
     * Time:  O(N)
     * Space: O(N)
     * */
    public int subarrayBitwiseORs(int[] arr) {
        int n = arr.length;
        Set<Integer> pre = null;
        Set<Integer> all = new HashSet<>();

        for(int i = 0; i < n; i++) {
            Set<Integer> cur = new HashSet<>();

            cur.add(arr[i]);
            all.add(arr[i]);
            if(pre != null) {
                for(int x : pre) {
                    cur.add(x | arr[i]);
                    all.add(x | arr[i]);
                }
            }

            pre = cur;
        }

        return all.size();
    }
}
